<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: osx | The {pnk}f(eli)x Blog]]></title>
  <link href="http://blog.pnkfx.org/blog/categories/osx/atom.xml" rel="self"/>
  <link href="http://blog.pnkfx.org/"/>
  <updated>2015-11-18T13:20:17+01:00</updated>
  <id>http://blog.pnkfx.org/</id>
  <author>
    <name><![CDATA[Felix S. Klock II]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Updating Octopress post-Mavericks upgrade.]]></title>
    <link href="http://blog.pnkfx.org/blog/2014/03/13/meta-updating-octopress-post-mavericks-upgrade/"/>
    <updated>2014-03-13T06:18:00+01:00</updated>
    <id>http://blog.pnkfx.org/blog/2014/03/13/meta-updating-octopress-post-mavericks-upgrade</id>
    <content type="html"><![CDATA[<p>I decided this morning to write a blog post related to Rust.  I have
not posted to this blog in months, and in the meantime I had upgraded
this computer at home to Mac OS X Mavericks (10.9.2).</p>

<p>So of course my existing set of commands for Octopress workflow did
not work.</p>

<!-- more -->


<p>At first there were dependencies like <code>chunky_png-1.2.7</code> that had to
be satisfied (re-installed, I assume; I am pretty sure I blew away my
previous Homebrew setup during the upgrade; I do not know how much
that overlaps with Ruby&rsquo;s package management system).</p>

<p>The few step was just blind following of the suggestions made by my
tools: <code>rake</code> suggests to run <code>bundle install</code>, and I comply.  And the results
seem promising:
<code>text
% rake generate
Could not find chunky_png-1.2.7 in any of the sources
Run \`bundle install\` to install missing gems.
% bundle install
Fetching gem metadata from http://rubygems.org/.......
Fetching gem metadata from http://rubygems.org/..
Using rake (0.9.6)
Using RedCloth (4.2.9)
Installing chunky_png (1.2.7)
Using fast-stemmer (1.0.2)
Using classifier (1.3.3)
Using fssm (0.2.10)
Installing sass (3.2.5)
Using compass (0.12.2)
Using directory_watcher (1.4.1)
Installing haml (3.1.8)
Installing kramdown (0.13.8)
Installing liquid (2.3.0)
Using syntax (1.0.0)
Using maruku (0.6.1)
Using posix-spawn (0.3.6)
Using yajl-ruby (1.1.0)
Installing pygments.rb (0.3.7)
Installing jekyll (0.12.0)
Installing rack (1.4.5)
Installing rack-protection (1.3.2)
Using rb-fsevent (0.9.3)
Using rdiscount (1.6.8)
Using redcarpet (2.2.2)
Using rubypants (0.2.0)
Installing tilt (1.3.3)
Installing sinatra (1.3.4)
Installing stringex (1.4.0)
Using bundler (1.3.5)
Your bundle is complete!
Use \`bundle show [gemname]\` to see where a bundled gem is installed.
</code></p>

<p>But I
balked on the second step:
<code>
% rake generate
rake aborted!
You have already activated rake 10.1.0, but your Gemfile requires rake 0.9.6. Using bundle exec may solve this.
/Users/pnkfelix/Dev/Sites/pnkfx-blog/Rakefile:2:in \`&lt;top (required)&gt;'
(See full trace by running task with --trace)
% bundle exec
bundler: exec needs a command to run
</code></p>

<p>I did not understand what <code>bundle exec</code> meant here, so I did not do the &ldquo;obvious thing&rdquo;, which apparently is to re-run generate but within bundle, like so:
<code>% bundle exec rake generate</code></p>

<p>Instead I fumbled around trying to figure out what my situation was
with respect to <code>rake:</code> do I need to downgrade to a previous version?
Or do I need to upgraade its subcomponents, and/or my whole site
configuration?</p>

<p>The first things I learned from a couple web interactions:</p>

<p>From <a href="http://stackoverflow.com/questions/17474969/you-have-already-activated-rake-0-9-6-but-your-gemfile-requires-rake-10-1-0-us">stackoverflow</a>
I learned:</p>

<ul>
<li>You can find out what version(s) of a gem you have install, with
the relatively obvious <code>gem list</code> command:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>% gem list rake&lt;/li&gt;
</span><span class='line'>&lt;/ul&gt;
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>&lt;p&gt;&lt;strong&gt;&lt;em&gt; LOCAL GEMS &lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;rake (10.1.0, 0.9.6)</span></code></pre></td></tr></table></div></figure></p>

<ul>
<li>You can also remove particular versions of a gem, with the <code>gem
uninstall</code> command:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>% gem uninstall rake&lt;/li&gt;
</span><span class='line'>&lt;/ul&gt;
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>&lt;p&gt;Select gem to uninstall:
</span><span class='line'> 1. rake-0.9.6
</span><span class='line'> 2. rake-10.1.0
</span><span class='line'> 3. All versions&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;blockquote&gt;&lt;p&gt;1
</span><span class='line'>Successfully uninstalled rake-0.9.6</span></code></pre></td></tr></table></div></figure></p></blockquote>

<p>But these facts and this process did not actually help, because I
still needed <code>rake-0.9.6</code> for my site configuration, for some reason I
have not yet determined (mostly due to lack of trying).</p>

<p>I then did some more guessing and followed some false paths, like
reinstalling the <code>bundler</code> gem, uninstalling and reinstalling rake
(which effectively led to me replacing rake-10.1.0 with rake-10.1.1).</p>

<p>At some point I ran this:
<code>
% bundle update rake
Fetching gem metadata from http://rubygems.org/........
Fetching gem metadata from http://rubygems.org/..
Resolving dependencies...
Installing rake (0.9.6)
Using RedCloth (4.2.9)
Using chunky_png (1.2.7)
Using fast-stemmer (1.0.2)
Using classifier (1.3.3)
Using fssm (0.2.10)
Using sass (3.2.5)
Using compass (0.12.2)
Using directory_watcher (1.4.1)
Using haml (3.1.8)
Using kramdown (0.13.8)
Using liquid (2.3.0)
Using syntax (1.0.0)
Using maruku (0.6.1)
Using posix-spawn (0.3.6)
Using yajl-ruby (1.1.0)
Using pygments.rb (0.3.7)
Using jekyll (0.12.0)
Using rack (1.4.5)
Using rack-protection (1.3.2)
Using rb-fsevent (0.9.3)
Using rdiscount (1.6.8)
Using redcarpet (2.2.2)
Using rubypants (0.2.0)
Using tilt (1.3.3)
Using sinatra (1.3.4)
Using stringex (1.4.0)
Using bundler (1.3.5)
Your bundle is updated!
</code>
but I still got the error:
<code>
% rake generate
rake aborted!
You have already activated rake 10.1.1, but your Gemfile requires rake 0.9.6. Using bundle exec may solve this.
/Users/pnkfelix/Dev/Sites/pnkfx-blog/Rakefile:2:in \`&lt;top (required)&gt;'
(See full trace by running task with --trace)
</code>
and this is when I finally saw that I had to do:
<code>
% bundle exec rake generate
</code></p>

<p>Except that this did not solve everything:
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>% bundle exec rake generate&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h2&gt;Generating Site with Jekyll&lt;/h2&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;unchanged sass/screen.scss
</span><span class='line'>Configuration from /Users/pnkfelix/Dev/Sites/pnkfx-blog/_config.yml
</span><span class='line'>Building site: source -&gt; public
</span><span class='line'>YAML Exception reading 2013-04-12-better-command-completion-in-bash-aka-resolving-zsh-envy.markdown: invalid byte sequence in US-ASCII
</span><span class='line'>/Users/pnkfelix/Dev/Sites/pnkfx-blog/plugins/backtick_code_block.rb:13:in `gsub&#39;: invalid byte sequence in US-ASCII (ArgumentError)
</span><span class='line'>    from /Users/pnkfelix/Dev/Sites/pnkfx-blog/plugins/backtick_code_block.rb:13:in `render_code_block\&amp;lsquo;
</span><span class='line'>    from /Users/pnkfelix/Dev/Sites/pnkfx-blog/plugins/octopress_filters.rb:12:in `pre_filter&amp;rsquo;
</span><span class='line'>    from /Users/pnkfelix/Dev/Sites/pnkfx-blog/plugins/octopress_filters.rb:28:in `pre_render&#39;
</span><span class='line'>    from /Users/pnkfelix/Dev/Sites/pnkfx-blog/plugins/post_filters.rb:112:in `block in pre_render&#39;
</span><span class='line'>    from /Users/pnkfelix/Dev/Sites/pnkfx-blog/plugins/post_filters.rb:111:in `each&#39;
</span><span class='line'>    from /Users/pnkfelix/Dev/Sites/pnkfx-blog/plugins/post_filters.rb:111:in `pre_render&#39;
</span><span class='line'>    from /Users/pnkfelix/Dev/Sites/pnkfx-blog/plugins/post_filters.rb:166:in `do_layout&#39;
</span><span class='line'>    from /Users/pnkfelix/.rbenv/versions/1.9.3-p194/lib/ruby/gems/1.9.1/gems/jekyll-0.12.0/lib/jekyll/post.rb:195:in `render&#39;
</span><span class='line'>    from /Users/pnkfelix/.rbenv/versions/1.9.3-p194/lib/ruby/gems/1.9.1/gems/jekyll-0.12.0/lib/jekyll/site.rb:200:in `block in render&#39;
</span><span class='line'>    from /Users/pnkfelix/.rbenv/versions/1.9.3-p194/lib/ruby/gems/1.9.1/gems/jekyll-0.12.0/lib/jekyll/site.rb:199:in `each&#39;
</span><span class='line'>    from /Users/pnkfelix/.rbenv/versions/1.9.3-p194/lib/ruby/gems/1.9.1/gems/jekyll-0.12.0/lib/jekyll/site.rb:199:in `render&#39;
</span><span class='line'>    from /Users/pnkfelix/.rbenv/versions/1.9.3-p194/lib/ruby/gems/1.9.1/gems/jekyll-0.12.0/lib/jekyll/site.rb:41:in `process&#39;
</span><span class='line'>    from /Users/pnkfelix/.rbenv/versions/1.9.3-p194/lib/ruby/gems/1.9.1/gems/jekyll-0.12.0/bin/jekyll:264:in `&lt;top (required)&gt;&amp;lsquo;
</span><span class='line'>    from /Users/pnkfelix/.rbenv/versions/1.9.3-p194/bin/jekyll:23:in `load&amp;rsquo;
</span><span class='line'>    from /Users/pnkfelix/.rbenv/versions/1.9.3-p194/bin/jekyll:23:in `&lt;main&gt;&amp;lsquo;
</span></code></pre></td></tr></table></div></figure></p>

<p>Another web search brought me to a <a href="http://otfusion.org/blog/2013/10/27/os-x-mavericks/">post by a fellow Mavericks user</a> who seems to have a similar attitude to my own about ruby development.
And from that I found the full command I needed
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>% LANG=en_US.utf-8 bundle exec rake generate&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h2&gt;Generating Site with Jekyll&lt;/h2&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;unchanged sass/screen.scss
</span><span class='line'>Configuration from /Users/pnkfelix/Dev/Sites/pnkfx-blog/_config.yml
</span><span class='line'>Building site: source -&gt; public
</span><span class='line'>Successfully generated site: source -&gt; public
</span></code></pre></td></tr></table></div></figure></p>

<p>And here we are!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Better command completion in bash on OS X]]></title>
    <link href="http://blog.pnkfx.org/blog/2013/04/12/better-command-completion-in-bash-aka-resolving-zsh-envy/"/>
    <updated>2013-04-12T07:57:00+02:00</updated>
    <id>http://blog.pnkfx.org/blog/2013/04/12/better-command-completion-in-bash-aka-resolving-zsh-envy</id>
    <content type="html"><![CDATA[<p>(This post started as a personal e-mail to Niko, and then I figured it
was blog worthy.)</p>

<p>There&rsquo;s plenty of problems when working atop &ldquo;OS X&rdquo;;
but no need to be jealous of Shu&rsquo;s zsh setup
(at least not for its tab-completion on git stuff),
at least not if you are already using Homebrew.
Just install
<a href="http://blog.jeffterrace.com/2012/09/bash-completion-for-mac-os-x.html">brew&rsquo;s bash completion package</a>!</p>

<!-- more -->


<p>Executive summary:</p>

<pre><code class="bash">% brew install bash-completion

% echo &gt;&gt; ~/.bash_profile &lt;&lt;END
  if [ -f $(brew --prefix)/etc/bash_completion ]; then
    . $(brew --prefix)/etc/bash_completion
  fi
END
</code></pre>

<p>And voilà!</p>

<p>See also potentially related topics from <a href="http://superuser.com/questions/288438/bash-completion-for-commands-in-mac-os">super user</a>, <a href="http://stackoverflow.com/questions/14970728/homebrews-git-not-using-completion">stack overflow</a>, <a href="http://milkbox.net/note/brace-completion-in-snow-leopard-upgrading-bash/">milkbox blog</a>.</p>

<hr />

<p>Note also that I did burn myself by trying to get too smart: In
particular, after reading <a href="http://stackoverflow.com/questions/14970728/homebrews-git-not-using-completion">stack overflow</a>, I over-eagerly
attempted to address a purported problem by installing the homebrew
newer git instead of the default (older) built-in git installed by
Apple.</p>

<p>This was a little more painful than I expected, because there were a
bunch of git-related commands already in my <code>/usr/local/bin</code>, probably
I had likely already copied git to there once before by hand, and so
brew kept aborting the installation because it did not want to
overwrite the binaries that it was not already managing.  I think brew
was aborting the install in a sound transactional manner, but I am not
100% sure of that, because at least one point the command completion
stopped working and at that point I just</p>

<ol>
<li>gave up on understanding where everything came from,</li>
<li>moved the non-brew git-related material
in <code>/usr/local/bin/</code> out of the way, and</li>
<li>redid the <code>brew install git</code></li>
</ol>


<hr />

<p>Anyway, I should also give a shout-out to Axel Hecht; his post
on Mozilla&rsquo;s Yammer instance is what got me to the point of even
attempting to install this piece of marvelousness.</p>

<p>(Also, further posts on yammer are lightly pushing for readers to consider
zsh as an alternative to bash.  I do not think I am ready to switch to zsh,
but I can at least link to the <a href="http://friedcpu.wordpress.com/2007/07/24/zsh-the-last-shell-youll-ever-need/">blog post arguing for zsh</a>.)</p>

<hr />

<p>Update (written 2013 april 16): Now that I have decent command/context
sensitive completion in bash in my terminal, of <em>course</em> I
want to have it in my Emacs <code>M-x shell</code> as well.  At first I
was dismayed that I did not just get that &ldquo;out of the box&rdquo;;
then I was happy after some googling to discover:
<a href="https://github.com/szermatt/emacs-bash-completion">bash-completion.el</a>, which forwards the completion
requests onto a separate bash process, so that one inherits
the same completions that bash provides in the terminal,
with no Emacs hacking.</p>

<p>Well, at least, not very much Emacs hacking.</p>

<p>It turns out that I had to do a little bit of Emacs hacking
in order to get the setup working, at least for my idiosyncratic
bash setup.  In particular, it seems like the Elisp code
for bash-complete.el assumes that one is setting one&rsquo;s
prompt via the <code>PS1</code> environment variable, while mine is often
set via the <code>PROMPT_COMMAND</code> environment variable.
After determining what is going on, it is easy enough to fix this (and
the corresponding solution has even been filed as a <a href="https://github.com/szermatt/emacs-bash-completion/pull/2">pull request in
the github repo</a>).</p>
]]></content>
  </entry>
  
</feed>
